package com.ingsw2.controller;

import com.ingsw2.model.ControllerResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ingsw2.model.Customer;
import com.ingsw2.model.CustomerRepository;

@Controller // This means that this class is a Controller
@RequestMapping(path="/ecommerce/customer") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called CustomerRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private CustomerRepository CustomerRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody ControllerResponse addNewCustomer (@RequestParam String name
            , @RequestParam String email) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Customer n = CustomerRepository.findByEmail(email).orElse(null);
		if(n == null){
			n = new Customer();
			n.setEmail(email);
		}
        n.setName(name);
        CustomerRepository.save(n);
        return new ControllerResponse(true, "Saved");
    }

    @GetMapping(path="/all")
    public @ResponseBody ControllerResponse<Iterable<Customer>> getAllCustomers() {
        // This returns a JSON or XML with the Customers
        return new ControllerResponse(true, null, CustomerRepository.findAll());
    }

    @PostMapping(path="/exists")
    public @ResponseBody ControllerResponse existsCustomer(@RequestParam String email){
        Integer i = CustomerRepository.countByEmail(email);
        return i > 0 ? new ControllerResponse(true, "Exists") : new ControllerResponse(true, "Not Exists");
    }
}